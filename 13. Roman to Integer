class Solution {

     public static int getRomanValue(char romanChar) {
        switch (romanChar) {
            case 'I': return 1;
            case 'V': return 5;
            case 'X': return 10;
            case 'L': return 50;
            case 'C': return 100;
            case 'D': return 500;
            case 'M': return 1000;
            default: return 0;
        }
    }
    public int romanToInt(String s) {
    //    HashMap<Character, Integer> romanMap = new HashMap<>();
    //    romanMap.put('I',1) ;
    //    romanMap.put('V',5) ;
    //    romanMap.put('X',10) ;
    //    romanMap.put('L',50) ;
    //    romanMap.put('C',100) ;
    //    romanMap.put('D',500) ;
    //    romanMap.put('M',1000) ;
    //  int total = 0;  
        
    //     for (int i = 0; i < s.length(); i++) {
    //         int currentVal = romanMap.get(s.charAt(i));
    //         if (i + 1 < s.length() && currentVal < romanMap.get(s.charAt(i + 1))) {
    //             total -= currentVal;
    //         } else {
    //             total += currentVal;
    //         }
    //     }
    //    return total;

    int total = 0; 
        int prevValue = 0;
        for (int i = 0; i < s.length(); i++) {
            int currentVal = getRomanValue(s.charAt(i));  
            // if (currentValue > prevValue) {
            //     total += currentValue - 2 * prevValue;
            // } else {
            //     total += currentValue;
            // }
            // prevValue = currentValue;  
            if (i + 1 < s.length() && currentVal < getRomanValue(s.charAt(i+1)))
             {
                 total -= currentVal;
             } else {
                 total += currentVal;
             }
        }

        return total;

    }
}
